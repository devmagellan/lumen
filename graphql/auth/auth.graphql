extend type Mutation {
    register(
        first_name: String!
        middle_name: String
        last_name: String!
        email: String!,
        secret_phrase: String!,
        password: String!
        password_confirmation: String!
    ): User!
    @field(resolver: "Auth\\RegisterMutator@register")
    @createUserValidation

    login(email: String!, password: String!): AuthTokenType!
    @field(resolver: "Auth\\LoginMutator@login")

    forgotPassword(email: String!): MessageResponse!
    @field(resolver: "Auth\\ForgotPasswordMutator@forgotPassword")

    resetPassword(
        token: String!
        email: String!
        secret_phrase: String!
        password: String!
        password_confirmation: String!
    ): MessageResponse
    @field(resolver: "Auth\\ResetPasswordMutator@reset")
    @resetPasswordValidation
}

extend type Mutation @guard {
    refreshToken: AuthTokenType
    @field(resolver: "Auth\\LoginMutator@refresh")

    logout: Boolean
    @field(resolver: "Auth\\LoginMutator@logout")
}

type AuthTokenType {
    access_token: String
    token_type: String
    expires_in: Int
}
