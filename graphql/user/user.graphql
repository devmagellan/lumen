extend type Query @guard {
    """
    needs permission: view-me-users
    """
    me: User @auth
    @can(ability: "view-me-users")

    """
    needs permission: list-users
    """
    users: [User]!
    @field(resolver: "UserQuery@all")
    @can(ability: "list-users")

    """
    needs permission: view-users
    """
    user(id: ID): User!
    @field(resolver: "UserQuery@find")
    @can(ability: "view-users")
}

extend type Mutation @guard {
    """
    needs permission: update-me-users
    """
    updateMe(user: UpdateUserInput! @spread): User!
    @field(resolver: "UserMutator@update")
    @can(ability: "update-me-users")
    @updateUserValidation

    """
    needs permission: assign-role-to-users
    """
    assignRoleToUser(id: ID!, role_id: ID!): MessageResponse!
    @field(resolver: "UserMutator@assignRole")
    @can(ability: "assign-role-to-users")
    @assignRoleValidation

    """
    needs permission: remove-role-to-users
    """
    removeRoleToUser(id: ID!, role_id: ID!): MessageResponse!
    @field(resolver: "UserMutator@removeRole")
    @can(ability: "remove-role-to-users")

    """
    needs permission: give-permission-to-users
    """
    givePermissionToUser(id: ID!, permission_id: ID!): MessageResponse!
    @field(resolver: "UserMutator@givePermission")
    @can(ability: "give-permission-to-users")
    @givePermissionValidation

    """
    needs permission: revoke-permission-to-users
    """
    revokePermissionToUser(id: ID!, permission_id: ID!): MessageResponse!
    @field(resolver: "UserMutator@revokePermission")
    @can(ability: "revoke-permission-to-users")
}

type User {
    id: ID!
    first_name: String!
    middle_name: String
    last_name: String!
    gender: String
    birthdate: Date
    email: String!
    business_email: String
    phone: String
    mobile: String
    business_phone: String
    business_phone_extension: String
    business_mobile: String
    toll_free_business_number: String
    address: String
    city: String
    state: String
    country: String
    zip_code: String
    secret_phrase: String
    fingerprint_code: String
    employments: [Employment]!
    roles: [Role]!
    permissions: [Permission]!
}

type Employment {
    id: ID!
    name: String!
    description: String
    website: String
    discount: Float
    type: String!
    supplier: String
    status: String!
    positions: [Position]!
}

input UpdateUserInput {
    first_name: String
    middle_name: String
    last_name: String
    gender: String
    birthdate: Date
    email: String
    business_email: String
    phone: String
    mobile: String
    business_phone: String
    business_phone_extension: String
    business_mobile: String
    toll_free_business_number: String
    address: String
    city: String
    state: String
    country: String
    zip_code: String
    secret_phrase: String
    fingerprint_code: String
}
