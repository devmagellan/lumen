extend type Query @middleware(checks: ["auth"]) {
    firms: [Firm]!
        @field(resolver: "FirmQuery@all")

    firm(id: Int): Firm!
        @field(resolver: "FirmQuery@find")
}

extend type Mutation @middleware(checks: ["auth"]) {
    createFirm(
        name: String!
        description: String
        website: String
        discount: Float
        type: String
        supplier: String
        status: String
        address: FirmAddressInput
        extra: FirmExtraInput
    ): Firm!
        @field(resolver: "FirmMutator@create")
        @createFirmValidation

    updateFirm(id: Int!, firm: UpdateFirmInput!): Firm!
        @field(resolver: "FirmMutator@update")
        @updateFirmValidation

    deleteFirm(id: Int!): MessageResponse!
        @field(resolver: "FirmMutator@delete")
}

type Firm {
    id: ID!
    name: String!
    description: String
    website: String
    discount: Float
    type: String!
    supplier: String
    status: String!
}

input UpdateFirmInput {
    name: String
    description: String
    website: String
    discount: Float
    type: String
    supplier: String
    status: String
    address: FirmAddressInput
    extra: FirmExtraInput
}

input FirmAddressInput {
    address: String
    fax: String
    phone: String
    postal_code: String
    alt_phone: String
    city: String
    state: String
    country: String
}

input FirmExtraInput {
    locale: String
    timezone: String
    currency: String
    contact_name: String
    email: String
    logo: Int
    header_logo: Int
    mobile_header_logo: Int
    headline: String
    discount_fee: Float
    as_discount_fee: Float
    default_association: Int
}
