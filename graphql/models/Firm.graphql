extend type Query @middleware(checks: ["auth"]) {
    firms: [Firm]!
        @field(resolver: "FirmQuery@all")

    firm(id: ID): Firm!
        @field(resolver: "FirmQuery@find")
}

extend type Mutation @middleware(checks: ["auth"]) {
    createFirm(
        name: String!
        description: String
        website: String
        discount: Float
        type: String
        supplier: String
        status: String
        address: FirmAddressInput
        extra: FirmExtraInput
    ): Firm!
        @field(resolver: "FirmMutator@create")
        @createFirmValidation

    updateFirm(id: ID!, firm: UpdateFirmInput!): Firm!
        @field(resolver: "FirmMutator@update")
        @updateFirmValidation

    deleteFirm(id: ID!): MessageResponse!
        @field(resolver: "FirmMutator@delete")

    attachEmployee(firmId: ID!, userId: ID!, position: String!): MessageResponse!
        @field(resolver: "FirmMutator@attachEmployee")

    detachEmployee(firmId: ID!, userId: ID!): MessageResponse!
        @field(resolver: "FirmMutator@detachEmployee")
}

type Firm {
    id: ID!
    name: String!
    description: String
    website: String
    discount: Float
    type: String!
    supplier: String
    status: String!
    employees: [Employee]!
}

type Position {
  position: String!
}

type Employee {
    id: ID!
    first_name: String!
    middle_name: String
    last_name: String!
    gender: String
    birthdate: Date
    email: String!
    business_email: String
    phone: String
    mobile: String
    business_phone: String
    business_phone_extension: String
    business_mobile: String
    toll_free_business_number: String
    address: String
    city: String
    state: String
    country: String
    zip_code: String
    work: Position!
}

input UpdateFirmInput {
    name: String
    description: String
    website: String
    discount: Float
    type: String
    supplier: String
    status: String
    address: FirmAddressInput
    extra: FirmExtraInput
}

input FirmAddressInput {
    address: String
    fax: String
    phone: String
    postal_code: String
    alt_phone: String
    city: String
    state: String
    country: String
}

input FirmExtraInput {
    locale: String
    timezone: String
    currency: String
    contact_name: String
    email: String
    logo: Int
    header_logo: Int
    mobile_header_logo: Int
    headline: String
    discount_fee: Float
    as_discount_fee: Float
    default_association: Int
}
